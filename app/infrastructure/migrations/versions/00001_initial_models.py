"""initial models

Revision ID: 00001
Revises:
Create Date: 2025-10-06 17:58:08.479369

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "00001"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "distribution_configs",
        sa.Column("func_name", sa.String(), nullable=False),
        sa.Column("content", sa.JSON(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("func_name"),
        sqlite_autoincrement=True,
    )
    op.create_table(
        "real_estate_objects",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("lon", sa.Float(), nullable=True),
        sa.Column("lat", sa.Float(), nullable=True),
        sa.Column("curr", sa.String(), nullable=True),
        sa.Column("url", sa.String(), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("custom_fields", sa.JSON(), nullable=True),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sqlite_autoincrement=True,
    )
    op.create_table(
        "income_plans",
        sa.Column("uploaded_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("reo_id", sa.Integer(), nullable=False),
        sa.Column("property_type", sa.String(), nullable=False),
        sa.Column("period_begin", sa.DateTime(), nullable=False),
        sa.Column("period_end", sa.DateTime(), nullable=False),
        sa.Column("area", sa.Float(), nullable=False),
        sa.Column("planned_sales_revenue", sa.Float(), nullable=False),
        sa.Column("price_per_sqm", sa.Float(), nullable=False),
        sa.Column("price_per_sqm_end", sa.Float(), nullable=False),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["reo_id"],
            ["real_estate_objects.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sqlite_autoincrement=True,
    )
    op.create_table(
        "premises",
        sa.Column("reo_id", sa.Integer(), nullable=False),
        sa.Column("uploaded", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("property_type", sa.String(), nullable=False),
        sa.Column("premises_id", sa.String(), nullable=False),
        sa.Column("number_of_unit", sa.Integer(), nullable=False),
        sa.Column("number", sa.Integer(), nullable=False),
        sa.Column("entrance", sa.String(), nullable=False),
        sa.Column("floor", sa.Integer(), nullable=False),
        sa.Column("layout_type", sa.String(), nullable=False),
        sa.Column("full_price", sa.Float(), nullable=True),
        sa.Column("total_area_m2", sa.Float(), nullable=False),
        sa.Column("estimated_area_m2", sa.Float(), nullable=False),
        sa.Column("price_per_meter", sa.Float(), nullable=False),
        sa.Column("number_of_rooms", sa.Integer(), nullable=False),
        sa.Column("living_area_m2", sa.Float(), nullable=True),
        sa.Column("kitchen_area_m2", sa.Float(), nullable=True),
        sa.Column("view_from_window", sa.String(), nullable=True),
        sa.Column("number_of_levels", sa.Integer(), nullable=True),
        sa.Column("number_of_loggias", sa.Integer(), nullable=True),
        sa.Column("number_of_balconies", sa.Integer(), nullable=True),
        sa.Column("number_of_bathrooms_with_toilets", sa.Integer(), nullable=True),
        sa.Column("number_of_separate_bathrooms", sa.Integer(), nullable=True),
        sa.Column("number_of_terraces", sa.Integer(), nullable=True),
        sa.Column("studio", sa.Boolean(), nullable=False),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("sales_amount", sa.Float(), nullable=True),
        sa.Column("customcontent", sa.JSON(), nullable=True),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["reo_id"],
            ["real_estate_objects.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sqlite_autoincrement=True,
    )
    op.create_table(
        "pricing_configs",
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("reo_id", sa.Integer(), nullable=False),
        sa.Column("content", sa.JSON(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["reo_id"],
            ["real_estate_objects.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sqlite_autoincrement=True,
    )
    op.create_table(
        "status_mappings",
        sa.Column("reo_id", sa.Integer(), nullable=False),
        sa.Column("dev_status", sa.String(), nullable=False),
        sa.Column("sys_status", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["reo_id"],
            ["real_estate_objects.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sqlite_autoincrement=True,
    )
    op.create_table(
        "committed_prices",
        sa.Column("reo_id", sa.Integer(), nullable=False),
        sa.Column("pricing_config_id", sa.Integer(), nullable=False),
        sa.Column("distribution_config_id", sa.Integer(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("actual_price", sa.Float(), nullable=False),
        sa.Column("x_rank", sa.Float(), nullable=False),
        sa.Column("content", sa.JSON(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["distribution_config_id"],
            ["distribution_configs.id"],
        ),
        sa.ForeignKeyConstraint(
            ["pricing_config_id"],
            ["pricing_configs.id"],
        ),
        sa.ForeignKeyConstraint(
            ["reo_id"],
            ["real_estate_objects.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sqlite_autoincrement=True,
    )
    op.create_table(
        "sales",
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("notified_at", sa.DateTime(), nullable=True),
        sa.Column("premises_id", sa.Integer(), nullable=False),
        sa.Column("saledate", sa.DateTime(), nullable=False),
        sa.Column("amount", sa.Float(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["premises_id"],
            ["premises.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sqlite_autoincrement=True,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("sales")
    op.drop_table("committed_prices")
    op.drop_table("status_mappings")
    op.drop_table("pricing_configs")
    op.drop_table("premises")
    op.drop_table("income_plans")
    op.drop_table("real_estate_objects")
    op.drop_table("distribution_configs")
    # ### end Alembic commands ###
